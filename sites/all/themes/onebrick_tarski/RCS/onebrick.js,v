head	1.7;
access;
symbols;
locks; strict;
comment	@# @;


1.7
date	2013.12.18.03.09.37;	author jordan;	state Exp;
branches;
next	1.6;

1.6
date	2013.06.21.22.07.39;	author jacob;	state Exp;
branches;
next	1.5;

1.5
date	2012.09.18.04.44.07;	author jordan;	state Exp;
branches;
next	1.4;

1.4
date	2012.08.14.02.43.46;	author jordan;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.10.04.03.44;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2012.08.08.05.10.35;	author jordan;	state Exp;
branches;
next	1.1;

1.1
date	2012.05.16.01.23.03;	author jordan;	state Exp;
branches;
next	;


desc
@@


1.7
log
@*** empty log message ***
@
text
@
/*
jQuery(document).ajaxComplete(function(e, xhr, settings) {
   jQuery.colorbox.resize();
});
*/

jQuery.fn.reloadPage = function(data) {
   location.reload();
};

var initialFormTag = "_initial";
var popupFormDivId = "currentPopupForm";
var popupInternalFormDivId = "internalPopupFormId";


// initialization script for JANRAIN login, retrieved from the JANRAIN site
(function() {
    if (typeof window.janrain !== 'object') window.janrain = {};
    if (typeof window.janrain.settings !== 'object') window.janrain.settings = {};
    
    janrain.settings.tokenUrl='http://onebrick.org/rpx/token_handler';
    janrain.settings.tokenAction='event';

    function isReady() { janrain.ready = true; };
    if (document.addEventListener) {
      document.addEventListener("DOMContentLoaded", isReady, false);
    } else {
      window.attachEvent('onload', isReady);
    }

    var e = document.createElement('script');
    e.type = 'text/javascript';
    e.id = 'janrainAuthWidget';

    if (document.location.protocol === 'https:') {
      e.src = 'https://rpxnow.com/js/lib/onebrick/engage.js';
    } else {
      e.src = 'http://widget-cdn.rpxnow.com/js/lib/onebrick/engage.js';
    }

    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(e, s);
})();


function janrainWidgetOnload() {
    // gets called after the user logs in with janrain
    janrain.events.onProviderLoginToken.addHandler(function(tokenResponse) {
       jQuery.ajax({
                type: "POST",
                url: "/rpx/brick_token_handler",
                data: "token=" + tokenResponse.token,
                success: function(res) {
			alert("YAY");	
		}
        });
    })
}

function setupPopupForm(initialFormSelector) {
   // replace each id in the original form to have "_initial" on it (to prevent duplicates later)
   jQuery(initialFormSelector).find("*[id]").each(function() {
	jQuery(this).attr("id", jQuery(this).attr("id").replace(initialFormTag, "") + initialFormTag);
   })

   // if our form display wrapper doesnt exist, we create it
   if (jQuery("#" + popupFormDivId).length == 0) {
     jQuery('body').append("<div style='display:none'><div id='" + popupFormDivId + "'><div id='" + popupInternalFormDivId + "'></div></div></div>");
   } 
}

function resetPopupForm(initialFormSelector, initialFormWrapSelector) {
   // clone the original form (with events)
   var clone = jQuery(initialFormSelector + " form").clone(true);
 
   // fix social media links in the clone
   var engage = jQuery(clone).find(".janrainEngage");
   var actual = jQuery("#janrainEngageSignin");

   if (actual.length > 0 && engage.length > 0) {
      engage.bind("click", function() {
         actual.click();
      });
   }

   // wrap it in our form wrapper
   clone = jQuery("<div />", { "class":"formBlock", id:initialFormWrapSelector })
     .append(clone);

   var targetSelector = "#" + popupInternalFormDivId;

   // clear out our destination
   jQuery(targetSelector).empty();
  
   // now copy the form over
   clone.appendTo(targetSelector); 

   // simply remove the _initial parts of the id from our destination.
   jQuery(targetSelector).find("*[id]").each(function() { 
        jQuery(this).attr("id", jQuery(this).attr("id").replace(initialFormTag, "")); 
   })

   var newForm = jQuery(targetSelector + " form");
  
   // now we have to modify Drupal's internal ajax variables to point to the newly cloned elements 
   for (var item in Drupal.ajax) {
      var selector = Drupal.ajax[item].selector;
      if (selector) {
	 var inFormElem = jQuery(selector);

         if (inFormElem) {
	    Drupal.ajax[item].form = newForm;
            Drupal.ajax[item].element = inFormElem[0];
	 }
      }
   }
}

Drupal.ajax.prototype.commands.brick_raw_html = function(ajax, response, status) {
    jQuery(response.selector).html(response.html);
};

Drupal.ajax.prototype.commands.brick_close_colorbox = function(ajax, response, status) {
    jQuery.colorbox.close();
};
@


1.6
log
@Add some custom ajax response command handlers.
@
text
@d2 1
d6 1
d113 1
a113 1
            Drupal.ajax[item].form = newForm;
@


1.5
log
@*** empty log message ***
@
text
@d117 8
@


1.4
log
@*** empty log message ***
@
text
@d44 1
a44 1
// gets called after the user logs in with janrain
d46 1
d50 1
a50 1
                url: "/rpx/token_handler",
d53 1
a53 2
			alert(tokenResponse.token);
                	alert(res);
d62 1
a62 1
        jQuery(this).attr("id", jQuery(this).attr("id").replace(initialFormTag, "") + initialFormTag);
d75 10
a115 1

@


1.3
log
@k.
@
text
@d14 45
@


1.2
log
@*** empty log message ***
@
text
@d11 2
d19 5
d26 1
a26 1
function resetPopupForm(initialFormSelector, initialFormWrapSelector, targetFormSelector) {
d34 2
d37 1
a37 1
   jQuery(targetFormSelector).empty(); 
d40 1
a40 1
   clone.appendTo(targetFormSelector);
d43 1
a43 1
   jQuery(targetFormSelector).find("*[id]").each(function() { 
d47 1
a47 1
   var newForm = jQuery(targetFormSelector + " form");
@


1.1
log
@Initial revision
@
text
@d10 3
a12 2
function resetDrupalForm(initialFormSelector, initialFormWrapSelector, targetFormSelector) {
   
d14 2
a15 2
   jQuery(initialFormSelector).find("*[id]").each(function() { 
	jQuery(this).attr("id", jQuery(this).attr("id").replace("_initial", "") + "_initial"); 
d17 1
d19 1
a19 2
   var oldForm = jQuery(initialFormSelector + " form");

d21 1
a21 1
   var clone = jQuery(initialFormSelector + " " + initialFormWrapSelector + "_initial").clone(true);
d23 4
d35 1
a35 1
        jQuery(this).attr("id", jQuery(this).attr("id").replace("_initial", "")); 
@
