head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2013.08.01.19.26.10;	author jordan;	state Exp;
branches;
next	1.5;

1.5
date	2013.06.26.06.00.21;	author jacob;	state Exp;
branches;
next	1.4;

1.4
date	2013.06.21.22.40.25;	author jacob;	state Exp;
branches;
next	1.3;

1.3
date	2013.02.26.05.23.51;	author benson;	state Exp;
branches;
next	1.2;

1.2
date	2013.02.26.04.07.14;	author benson;	state Exp;
branches;
next	1.1;

1.1
date	2013.02.26.04.02.45;	author benson;	state Exp;
branches;
next	;


desc
@brick event
@


1.6
log
@*** empty log message ***
@
text
@<?php

function brick_event_is_cancelled($node) {
  return $node->field_event_status['und'][0]['value'] == 'Cancelled';
}


function brick_event_status($nid) {
  $node = node_load($nid);
  return $node->field_event_status['und'][0]['value'];
}

function brick_event_status_class($nid) {
	$str = '';
	$status = brick_get_event_assigned_status($nid);
	if ($status == 'Cancelled') {
		$str = 'event-cancelled';
	} else if (brick_can_optin()) {
		if ($status == 'Unassigned')
			$str = 'event-opted-in';
		else if ($status == 'Manager' || $status == 'Coordinator') {
			$str = 'event-assigned';
		}
	}

	return $str;
}

?>
@


1.5
log
@Add first-draft event reconciliation.
@
text
@a28 35
function brick_event_reconcile_form($form, &$form_state, $event_id) {
	$event = node_load($event_id);

	$reconciled = $event->field_reconciled['und'][0]['value'];

	$form['event_rec'] = array(
		'#type' => 'container',
	);

	$form['event_rec']['event_id'] = array(
		'#type' => 'hidden',
		'#name' => 'event_id',
		'#value' => $event_id,
	);

	$form['event_rec']['button'] = array(
		'#type' => 'button',
		'#value' => t("Reconcile"),
		'#disabled' => $reconciled,
		'#ajax' => array(
			'callback' => 'brick_event_reconcile_ajax',
		),
	);

	return $form;
}

function brick_event_reconcile_ajax($form, &$form_state) {
	$event_id = $form_state['values']['event_id'];

	$event = node_load($event_id);
	$event->field_reconciled['und'][0]['value'] = 1;
	node_save($event);
}

@


1.4
log
@Centralize code for computing event CSS class.
@
text
@d29 35
@


1.3
log
@*** empty log message ***
@
text
@d13 16
@


1.2
log
@event status
@
text
@d3 5
@


1.1
log
@Initial revision
@
text
@d3 4
a6 1

@
